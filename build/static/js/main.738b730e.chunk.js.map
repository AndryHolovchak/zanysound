{"version":3,"sources":["components/Track/track.module.sass","components/Player/player.module.sass","components/ScreenContainer/screenContainer.module.sass","components/Menu/desktop/desktopMenu.module.sass","components/Menu/mobile/mobileMenu.module.sass","components/PlaylistPreview/playlistPreview.module.sass","components/Tracklist/tracklist.module.sass","screens/searchScreen/searchScreen.module.sass","components/Icon/icon.module.sass","screens/WelcomeScreen/welcomeScreenMobile.module.sass","screens/likedScreen/likedScreen.module.sass","components/Button/button.module.sass","screens/collectionScreen/collectionScreen.module.sass","screens/playlistScreen/PlaylistScreen.module.scss","commonDefinitions/routeCommonDefinitions.ts","app/hooks.ts","slices/appSlice.ts","components/Icon/iconCommonDefinition.ts","helpers/deezerApiHelper.ts","components/Icon/Icon.tsx","components/Menu/desktop/DesktopMenu.tsx","components/Menu/mobile/MobileMenu.tsx","slices/playerSlice.ts","components/Player/Player.tsx","components/ScreenContainer/ScreenContainer.tsx","slices/contentSlice.ts","slices/userSlice.ts","slices/deezerSlice.ts","utils/urlUtils.ts","helpers/deezerDataHelper.ts","sagas/userSaga.ts","components/Track/Track.tsx","components/Tracklist/Tracklist.tsx","screens/likedScreen/LikedScreen.tsx","slices/searchSlice.ts","sagas/searchSaga.ts","screens/searchScreen/SearchScreen.tsx","components/Button/Button.tsx","sagas/deezerSaga.ts","screens/WelcomeScreen/WelcomeScreen.tsx","components/PlaylistPreview/PlaylistPreview.tsx","screens/collectionScreen/CollectionScreen.tsx","sagas/contentSaga.ts","screens/playlistScreen/PlaylistScreen.tsx","screens/recommendedScreen/RecommendedScreen.tsx","screens/callbackScreen/CallbackScreen.tsx","App.tsx","config/config.ts","slices/mp3Slice.ts","sagas/mp3Saga.ts","sagas/rootSaga.ts","app/store.ts","serviceWorker.ts","index.tsx"],"names":["module","exports","Routes","useAppDispatch","useDispatch","useAppSelector","useSelector","appSlice","createSlice","name","initialState","isMobileEnv","reducers","changeIsMobileEnv","state","action","payload","actions","selectIsMobileEnv","app","IconRotation","IconType","RequestType","Icon","onClick","type","Regular","rotation","fixedWidth","withBackground","title","className","finalClassName","classNames","style","icon","MenuItem","path","location","useLocation","history","useHistory","desktop_menu__item","pathname","push","desktop_menu__item_icon","DesktopMenu","desktop_menu","Collection","Search","Liked","Recommended","Profile","mobile_menu__item","mobile_menu__item_icon","MobileMenu","mobile_menu","playerSlice","paused","track","changePlayerPaused","changePlayerTrack","selectPlayerPaused","player","selectPlayerTrack","Player","styles","src","album","xlCover","player__cover","player__main_info","player__title","player__artist","artist","ScreenContainer","children","withMenu","isMobile","screen_container","screen_container__desktop_menu_container","screen_container__right_side","screen_container__screen","screen_container__mobile_menu_container","contentSlice","playlists","playlistsTracks","recommendedTracks","changePlaylists","changePlaylistsTracks","changeRecommendedTracks","selectPlaylists","content","selectPlaylistsTracks","selectRecommendedTracks","userSlice","playlistsIds","likedTracks","likedTracksIds","changeLikedTracks","changeLikedTracksIds","changeUserPlaylistsIds","selectLikedTracks","user","selectLikedTracksIds","selectUserPlaylistsIds","deezerSlice","token","changeDeezerToken","selectDeezerToken","deezer","object2queryParams","obj","encodeValues","resultArray","Object","entries","key","value","encodeURIComponent","join","deezerApiRequest","getUserPlaylists","API_URL","queryParams","method","Get","body","select","params","assign","access_token","generatedPath","finallBody","undefined","call","fetch","response","json","getPlaylistTracks","id","a","searchTrackApiCall","query","index","encodedQueyr","addTrackToLikedApiCall","track_id","Post","removeTrackFromLikedApiCall","Delete","loadRecommendedTracksApiCall","parseTrack","trackFromApi","toString","picture","xlPicture","picture_xl","bigPicture","picture_big","smallPicture","picture_small","mediumPicture","picture_medium","cover","cover_xl","bigCover","cover_big","smallCover","cover_small","mediumCover","cover_medium","rank","duration","shortTitle","title_short","explicitLyrics","explicit_lyrics","loadBasicUserInfoWatcher","loadUserPlaylistsWatcher","addTrackToLikedWatcher","removeTrackFromLikedWatcher","userSaga","LOAD_BASIC_USER_INFO","LOAD_USER_PLAYLISTS","ADD_TRACK_TO_LIKED","REMOVE_TRACK_FROM_LIKED","put","console","log","receivedPlaylists","playlistJson","parsedPlaylist","playlistFromApi","creatorId","creator","creationDate","Date","creation_date","isLikedTracks","is_loved_track","bitPicture","likedTracksJson","map","e","reversedTracks","reverse","f","allPlaylists","playlistsObject","forEach","item","p","trackIndex","indexOf","trackIdIndex","Error","newLiked","Array","from","newLikedIds","splice","takeLatest","Track","model","liked","dispatch","alt","track__cover","track__main_info","track__title","track__artist","Solid","Light","track__like","addTrackToLikedAction","Tracklist","tracks","tracklist","tracklist__inner","includes","tracklist__track","LikedScreen","liked_screen","searchSlice","result","changeSearchResult","selectSearchResult","search","searchTrackWatcher","searchSaga","SEARCH_TRACK","SearchScreenInput","useState","setValue","handleSearch","search_screen_input","onKeyDown","event","onChange","target","placeholder","SearchScreen","searchResult","search_screen","search_screen__tracklist","Button","onCLick","finalStyle","button","signInByRedirectWatcher","deezerSaga","SIGN_IN_BY_REDIRECT","authUrlParams","app_id","redirect_uri","perms","format","response_type","window","open","WelcomeScreen","mobileStyles","welcome_screen","welcome_screen_sign_in_button","PlaylistPreview","playlistModel","playlist_preview","playlist_preview__cover","playlist_preview__right_side","playlist_preview__title","CollectionScreen","userPlaylistsIds","userPlaylists","values","filter","i","collection_screen","loadPlaylistTracksWatcher","loadRecommendedTracksWatcher","contentSaga","LOAD_PLAYLIST_TRACKS","LOAD_RECOMMENDED_TRACKS","playlistId","parsedTracks","t","PlaylistScreen","useParams","useEffect","targetTracks","length","playlist_screen","RecommendedScreen","recommended_screen","CallbackScreen","paramsString","hash","slice","URLSearchParams","get","App","deezerToken","handleWindowResize","useCallback","innerWidth","addEventListener","removeEventListener","exact","render","to","config","DEEZER_TOKEN_STORAGE_KEY","DEEZER_APP_ID","process","MP3_SERVER_URL","mp3Slice","urls","changeMp3Urls","setMp3Url","mp3Url","generateMp3UrlWatcher","mp3Saga","GENERATE_MP3_URL","trackId","deezerId","data","ulr","expires","headers","canExpire","rootSaga","all","fork","persistConfig","storage","rootReducer","combineReducers","mp3","sagaMiddleware","createSagaMiddleware","persistedReducer","persistReducer","middlewareEnhancer","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","persistor","persistStore","run","Boolean","hostname","match","ReactDOM","StrictMode","loading","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.738b730e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"track\":\"track_track__2m9Xg\",\"track__cover\":\"track_track__cover__3blN6\",\"track__main_info\":\"track_track__main_info__3uL_g\",\"track__title\":\"track_track__title__19Nml\",\"track__artist\":\"track_track__artist__blDR4\",\"track__like\":\"track_track__like__2ahKF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"player\":\"player_player__1BaC5\",\"player__cover\":\"player_player__cover__2lb0f\",\"player__main_info\":\"player_player__main_info__sijji\",\"player__title\":\"player_player__title__CHZsl\",\"player__artist\":\"player_player__artist__2SO4w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"screen_container\":\"screenContainer_screen_container__1HtxU\",\"screen_container__desktop_menu_container\":\"screenContainer_screen_container__desktop_menu_container__27-Hp\",\"screen_container__right_side\":\"screenContainer_screen_container__right_side__3Sq7z\",\"screen_container__screen\":\"screenContainer_screen_container__screen__3ma8e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"desktop_menu\":\"desktopMenu_desktop_menu__33KDS\",\"desktop_menu__item\":\"desktopMenu_desktop_menu__item__3ECmP\",\"desktop_menu__item--active\":\"desktopMenu_desktop_menu__item--active__1-7_3\",\"desktop_menu__item_icon\":\"desktopMenu_desktop_menu__item_icon__1Qkgp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mobile_menu\":\"mobileMenu_mobile_menu__uqaUQ\",\"mobile_menu__item\":\"mobileMenu_mobile_menu__item__3HiBV\",\"mobile_menu__item--active\":\"mobileMenu_mobile_menu__item--active__12-XJ\",\"mobile_menu__item_icon\":\"mobileMenu_mobile_menu__item_icon__3Kb0u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"playlist_preview\":\"playlistPreview_playlist_preview__2ZW7L\",\"playlist_preview__title\":\"playlistPreview_playlist_preview__title__CE_ee\",\"playlist_preview__cover\":\"playlistPreview_playlist_preview__cover__1xiRN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tracklist\":\"tracklist_tracklist__vV6XL\",\"tracklist__inner\":\"tracklist_tracklist__inner__24VWk\",\"tracklist__track\":\"tracklist_tracklist__track__3eVD5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search_screen\":\"searchScreen_search_screen__13z54\",\"search_screen__tracklist\":\"searchScreen_search_screen__tracklist__wGJfj\",\"search_screen_input\":\"searchScreen_search_screen_input__1yFF7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"icon_icon__2Mu76\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"welcome_screen\":\"welcomeScreenMobile_welcome_screen__UBHp7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"liked_screen\":\"likedScreen_liked_screen__247ce\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button_button__3k3QA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"collection_screen\":\"collectionScreen_collection_screen__Ahijt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"playlist_screen\":\"PlaylistScreen_playlist_screen__2Gxfr\"};","export enum Routes {\r\n  Collection = \"/collection\",\r\n  Search = \"/search\",\r\n  Liked = \"/liked\",\r\n  Recommended = \"/recommended\",\r\n  Profile = \"/profile\",\r\n}\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\nimport type { RootState, AppDispatch } from './store';\r\n\r\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../app/store\";\r\n\r\nexport interface AppState {\r\n  isMobileEnv: boolean;\r\n}\r\n\r\nconst initialState: AppState = {\r\n  isMobileEnv: false,\r\n};\r\n\r\nexport const appSlice = createSlice({\r\n  name: \"app\",\r\n  initialState,\r\n  reducers: {\r\n    changeIsMobileEnv: (state, action: PayloadAction<boolean>) => {\r\n      state.isMobileEnv = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { changeIsMobileEnv } = appSlice.actions;\r\n\r\nexport const selectIsMobileEnv = (state: RootState) => state.app.isMobileEnv;\r\n\r\nexport default appSlice.reducer;\r\n","export enum IconRotation {\r\n  Deg90 = \"fa-rotate-90\",\r\n  Deg180 = \"fa-rotate-180\",\r\n  Deg270 = \"fa-rotate-270\",\r\n}\r\n\r\nexport enum IconType {\r\n  Solid = \"fas\",\r\n  Regular = \"far\",\r\n  Light = \"fal\",\r\n  Duotone = \"fad\",\r\n  Brands = \"fab\",\r\n}\r\n","import { call, select } from \"redux-saga/effects\";\r\nimport { store } from \"../app/store\";\r\nimport { selectDeezerToken } from \"../slices/deezerSlice\";\r\nimport { object2queryParams } from \"./../utils/urlUtils\";\r\nexport enum RequestType {\r\n  Get = \"GET\",\r\n  Post = \"POST\",\r\n  Delete = \"DELETE\",\r\n}\r\n\r\nconst API_URL = \"https://api.deezer.com\";\r\n\r\nexport function* deezerApiRequest(path: string, queryParams: object = {}, method = RequestType.Get, body: any = {}) {\r\n  const token: string = yield select(selectDeezerToken);\r\n  const params = object2queryParams(Object.assign(queryParams, { access_token: token }));\r\n  const generatedPath = API_URL + path + params;\r\n  const finallBody = method === RequestType.Get ? undefined : body;\r\n\r\n  const response: Response = yield call(fetch, generatedPath, { method, body: finallBody });\r\n  return response;\r\n}\r\n\r\nexport function* getUserInfo() {\r\n  let response: Response = yield deezerApiRequest(\"/user/me\");\r\n  let json: string = yield response.json();\r\n  return json;\r\n}\r\n\r\nexport function* getUserPlaylists() {\r\n  let response: Response = yield deezerApiRequest(\"/user/me/playlists\");\r\n  let json: string = yield response.json();\r\n  return json;\r\n}\r\n\r\nexport const getPlaylistTracks = async (id: string) => {\r\n  let response: any = await deezerApiRequest(`/playlist/${id}`);\r\n  let json = await response.json();\r\n  return json;\r\n};\r\n\r\nexport const searchTrackApiCall = async (query: string, index: number = 0) => {\r\n  let encodedQueyr = encodeURIComponent(query);\r\n  let response: any = await deezerApiRequest(`/search?q=${encodedQueyr}&strict=off&order=RANKING&index=${index}`);\r\n  let json = await response.json();\r\n  return json;\r\n};\r\n\r\nexport const addTrackToLikedApiCall = async (id: string) => {\r\n  let response: any = await deezerApiRequest(`/user/me/tracks`, { track_id: id }, RequestType.Post);\r\n};\r\n\r\nexport const removeTrackFromLikedApiCall = async (id: string) => {\r\n  let response: any = await deezerApiRequest(`/user/me/tracks`, { track_id: id }, RequestType.Delete);\r\n};\r\n\r\nexport const loadRecommendedTracksApiCall = async () => {\r\n  let response: any = await deezerApiRequest(\"/user/me/recommendations/tracks\");\r\n  let json = await response.json();\r\n  return json;\r\n};\r\n","import classNames from \"classnames\";\r\nimport React from \"react\";\r\nimport style from \"./icon.module.sass\";\r\nimport { IconRotation, IconType } from \"./iconCommonDefinition\";\r\n\r\nexport interface IconProps {\r\n  name: string;\r\n  title?: string;\r\n  className?: string;\r\n  onClick?: (e: React.MouseEvent<HTMLElement>) => void;\r\n  type?: IconType;\r\n  rotation?: IconRotation;\r\n  fixedWidth?: boolean;\r\n  withBackground?: boolean;\r\n}\r\n\r\nconst Icon: React.FC<IconProps> = ({\r\n  name,\r\n  onClick,\r\n  type = IconType.Regular,\r\n  rotation = \"\",\r\n  fixedWidth = false,\r\n  withBackground = false,\r\n  title = \"\",\r\n  className = \"\",\r\n}) => {\r\n  const finalClassName = classNames([\r\n    type,\r\n    rotation,\r\n    className,\r\n    style.icon,\r\n    `fa-${name}`,\r\n    fixedWidth && \"fa-fw\",\r\n    withBackground && style[\"icon--with_bg\"],\r\n  ]);\r\n\r\n  return <i title={title} className={finalClassName} onClick={onClick} />;\r\n};\r\n\r\nexport default Icon;\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { Routes } from \"../../../commonDefinitions/routeCommonDefinitions\";\r\n\r\nimport Icon from \"../../Icon/Icon\";\r\nimport \"../../../assets/fonts/fontawesome/css//all.min.css\";\r\nimport style from \"./desktopMenu.module.sass\";\r\n\r\nconst DesktopMenu: React.FC = () => {\r\n  return (\r\n    <div className={style.desktop_menu}>\r\n      <MenuItem path={Routes.Collection} icon=\"album-collection\" title=\"Playlists\" />\r\n      <MenuItem path={Routes.Search} icon=\"search\" title=\"Search\" />\r\n      <MenuItem path={Routes.Liked} icon=\"heart\" title=\"Liked\" />\r\n      <MenuItem path={Routes.Recommended} icon=\"fire\" title=\"Recommended\" />\r\n      <MenuItem path={Routes.Profile} icon=\"user\" title=\"Profile\" />\r\n    </div>\r\n  );\r\n};\r\n\r\ninterface MenuItemProps {\r\n  path: string;\r\n  icon: string;\r\n  title: string;\r\n}\r\n\r\nconst MenuItem: React.FC<MenuItemProps> = ({ path, title, icon }) => {\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n  const className = classNames([style.desktop_menu__item, { [style[\"desktop_menu__item--active\"]]: location.pathname === path }]);\r\n\r\n  return (\r\n    <div className={className} onClick={() => history.push(path)}>\r\n      <Icon name={icon} className={style.desktop_menu__item_icon} />\r\n      <span>{title}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DesktopMenu;\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { Routes } from \"../../../commonDefinitions/routeCommonDefinitions\";\r\n\r\nimport Icon from \"../../Icon/Icon\";\r\nimport \"../../../assets/fonts/fontawesome/css//all.min.css\";\r\nimport style from \"./mobileMenu.module.sass\";\r\n\r\nconst MobileMenu: React.FC = () => {\r\n  return (\r\n    <div className={style.mobile_menu}>\r\n      <MenuItem path={Routes.Collection} icon=\"album-collection\" />\r\n      <MenuItem path={Routes.Search} icon=\"search\" />\r\n      <MenuItem path={Routes.Liked} icon=\"heart\" />\r\n      <MenuItem path={Routes.Recommended} icon=\"fire\" />\r\n      <MenuItem path={Routes.Profile} icon=\"user\" />\r\n    </div>\r\n  );\r\n};\r\n\r\ninterface MenuItemProps {\r\n  path: string;\r\n  icon: string;\r\n}\r\n\r\nconst MenuItem: React.FC<MenuItemProps> = ({ path, icon }) => {\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n  const className = classNames([style.mobile_menu__item, { [style[\"mobile_menu__item--active\"]]: location.pathname === path }]);\r\n\r\n  return (\r\n    <div className={className} onClick={() => history.push(path)}>\r\n      <Icon name={icon} className={style.mobile_menu__item_icon} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MobileMenu;\r\n","import { TrackModel } from \"../commonTypes/deezerTypes\";\r\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../app/store\";\r\n\r\nexport interface PlayerState {\r\n  paused: boolean;\r\n  track: TrackModel | null;\r\n}\r\n\r\nconst initialState: PlayerState = {\r\n  paused: false,\r\n  track: null,\r\n};\r\n\r\nexport const playerSlice = createSlice({\r\n  name: \"player\",\r\n  initialState,\r\n  reducers: {\r\n    changePlayerPaused: (state, action: PayloadAction<boolean>) => {\r\n      state.paused = action.payload;\r\n    },\r\n    changePlayerTrack: (state, action: PayloadAction<TrackModel>) => {\r\n      state.track = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { changePlayerPaused, changePlayerTrack } = playerSlice.actions;\r\n\r\nexport const selectPlayerPaused = (state: RootState) => state.player.paused;\r\nexport const selectPlayerTrack = (state: RootState) => state.player.track;\r\n\r\nexport default playerSlice.reducer;\r\n","import React from \"react\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/hooks\";\r\nimport { selectPlayerPaused, selectPlayerTrack } from \"../../slices/playerSlice\";\r\nimport styles from \"./player.module.sass\";\r\n\r\nexport const Player = () => {\r\n  const dispatch = useAppDispatch();\r\n  const paused = useAppSelector(selectPlayerPaused);\r\n  const track = useAppSelector(selectPlayerTrack);\r\n\r\n  if (!track) {\r\n    return <></>;\r\n  }\r\n\r\n  return (\r\n    <div className={styles.player}>\r\n      <img src={track.album.xlCover} className={styles.player__cover} />\r\n      <div className={styles.player__main_info}>\r\n        <span className={styles.player__title}>{track.title}</span>\r\n        <span className={styles.player__artist}>{track.artist.name}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useAppSelector } from \"../../app/hooks\";\r\nimport { selectIsMobileEnv } from \"../../slices/appSlice\";\r\n\r\nimport DesktopMenu from \"../Menu/desktop/DesktopMenu\";\r\nimport MobileMenu from \"../Menu/mobile/MobileMenu\";\r\nimport { Player } from \"../Player/Player\";\r\n\r\nimport style from \"./screenContainer.module.sass\";\r\n\r\nexport interface ScreenContainerProps {\r\n  withMenu?: boolean;\r\n}\r\n\r\nconst ScreenContainer: React.FC<ScreenContainerProps> = ({ children, withMenu = true }) => {\r\n  const isMobile = useAppSelector(selectIsMobileEnv);\r\n\r\n  return (\r\n    <div className={style.screen_container}>\r\n      {withMenu && !isMobile && (\r\n        <div className={style.screen_container__desktop_menu_container}>\r\n          <DesktopMenu />\r\n        </div>\r\n      )}\r\n      <div className={style.screen_container__right_side}>\r\n        <div className={style.screen_container__screen}>{children}</div>\r\n        {withMenu && isMobile && (\r\n          <div className={style.screen_container__mobile_menu_container}>\r\n            <Player />\r\n            <MobileMenu />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ScreenContainer;\r\n","import { Playlists, PlaylistsTracks } from \"./../commonTypes/miscTypes.d\";\r\nimport { PlaylistModel } from \"./../commonTypes/deezerTypes.d\";\r\nimport { TrackModel } from \"../commonTypes/deezerTypes\";\r\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../app/store\";\r\n\r\nexport interface ContentState {\r\n  playlists: Playlists;\r\n  playlistsTracks: PlaylistsTracks;\r\n  recommendedTracks: TrackModel[];\r\n}\r\n\r\nconst initialState: ContentState = {\r\n  playlists: [],\r\n  playlistsTracks: {},\r\n  recommendedTracks: [],\r\n};\r\n\r\nexport const contentSlice = createSlice({\r\n  name: \"content\",\r\n  initialState,\r\n  reducers: {\r\n    changePlaylists: (state, action: PayloadAction<Playlists>) => {\r\n      state.playlists = { ...action.payload };\r\n    },\r\n    changePlaylistsTracks: (state, action: PayloadAction<PlaylistsTracks>) => {\r\n      state.playlistsTracks = { ...action.payload };\r\n    },\r\n    changeRecommendedTracks: (state, action: PayloadAction<TrackModel[]>) => {\r\n      state.recommendedTracks = [...action.payload];\r\n    },\r\n  },\r\n});\r\n\r\nexport const { changePlaylists, changePlaylistsTracks, changeRecommendedTracks } = contentSlice.actions;\r\n\r\nexport const selectPlaylists = (state: RootState) => state.content.playlists;\r\nexport const selectPlaylistsTracks = (state: RootState) => state.content.playlistsTracks;\r\nexport const selectRecommendedTracks = (state: RootState) => state.content.recommendedTracks;\r\n\r\nexport default contentSlice.reducer;\r\n","import { PlaylistsTracks } from \"./../commonTypes/miscTypes.d\";\r\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../app/store\";\r\nimport { PlaylistModel, TrackModel } from \"../commonTypes/deezerTypes\";\r\n\r\nexport interface UserState {\r\n  playlistsIds: string[];\r\n  likedTracksIds: string[];\r\n  likedTracks: TrackModel[];\r\n}\r\n\r\nconst initialState: UserState = {\r\n  playlistsIds: [],\r\n  likedTracks: [],\r\n  likedTracksIds: [],\r\n};\r\n\r\nexport const userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState,\r\n  reducers: {\r\n    changeLikedTracks: (state, action: PayloadAction<TrackModel[]>) => {\r\n      state.likedTracks = [...action.payload];\r\n    },\r\n    changeLikedTracksIds: (state, action: PayloadAction<string[]>) => {\r\n      state.likedTracksIds = [...action.payload];\r\n    },\r\n    changeUserPlaylistsIds: (state, action: PayloadAction<string[]>) => {\r\n      state.playlistsIds = [...action.payload];\r\n    },\r\n  },\r\n});\r\n\r\nexport const { changeLikedTracks, changeLikedTracksIds, changeUserPlaylistsIds } = userSlice.actions;\r\n\r\nexport const selectLikedTracks = (state: RootState) => state.user.likedTracks;\r\nexport const selectLikedTracksIds = (state: RootState) => state.user.likedTracksIds;\r\nexport const selectUserPlaylistsIds = (state: RootState) => state.user.playlistsIds;\r\n\r\nexport default userSlice.reducer;\r\n","import { TrackModel } from \"./../commonTypes/deezerTypes.d\";\r\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../app/store\";\r\n\r\nexport interface DeezerState {\r\n  token: string;\r\n}\r\n\r\nconst initialState: DeezerState = {\r\n  token: \"\",\r\n};\r\n\r\nexport const deezerSlice = createSlice({\r\n  name: \"deezer\",\r\n  initialState,\r\n  reducers: {\r\n    changeDeezerToken: (state, action: PayloadAction<string>) => {\r\n      state.token = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { changeDeezerToken } = deezerSlice.actions;\r\n\r\nexport const selectDeezerToken = (state: RootState) => state.deezer.token;\r\n\r\nexport default deezerSlice.reducer;\r\n","export const object2queryParams = (obj: any, encodeValues: boolean = true): string => {\r\n  let resultArray = [\"?\"];\r\n\r\n  for (const [key, value] of Object.entries<string>(obj)) {\r\n    resultArray.push(`${key}=${encodeValues ? encodeURIComponent(value) : value}`);\r\n  }\r\n\r\n  return resultArray.join(\"&\");\r\n};\r\n","import { AlbumModel, ArtistModel, PlaylistModel, TrackModel } from \"../commonTypes/deezerTypes\";\r\n\r\nexport const parseTrack = (trackFromApi: any): TrackModel => {\r\n  const artist: ArtistModel = {\r\n    id: trackFromApi.artist.id.toString(),\r\n    name: trackFromApi.artist.name,\r\n    picture: trackFromApi.artist.picture,\r\n    xlPicture: trackFromApi.artist.picture_xl,\r\n    bigPicture: trackFromApi.artist.picture_big,\r\n    smallPicture: trackFromApi.artist.picture_small,\r\n    mediumPicture: trackFromApi.artist.picture_medium,\r\n  };\r\n\r\n  const album: AlbumModel = {\r\n    id: trackFromApi.album.id.toString(),\r\n    title: trackFromApi.album.title,\r\n    cover: trackFromApi.album.cover,\r\n    xlCover: trackFromApi.album.cover_xl,\r\n    bigCover: trackFromApi.album.cover_big,\r\n    smallCover: trackFromApi.album.cover_small,\r\n    mediumCover: trackFromApi.album.cover_medium,\r\n  };\r\n\r\n  const trackId = trackFromApi.id.toString();\r\n\r\n  return {\r\n    album,\r\n    artist,\r\n    id: trackId,\r\n    rank: trackFromApi.rank,\r\n    title: trackFromApi.title,\r\n    duration: trackFromApi.duration,\r\n    shortTitle: trackFromApi.title_short,\r\n    explicitLyrics: trackFromApi.explicit_lyrics,\r\n  };\r\n};\r\n\r\nexport const parsePlaylist = (playlistFromApi: any): PlaylistModel => {\r\n  return {\r\n    id: playlistFromApi.id.toString(),\r\n    title: playlistFromApi.title,\r\n    creatorId: playlistFromApi.creator.id,\r\n    creationDate: new Date(playlistFromApi.creation_date),\r\n    isLikedTracks: playlistFromApi.is_loved_track,\r\n    picture: playlistFromApi.picture,\r\n    smallPicture: playlistFromApi.picture_small,\r\n    mediumPicture: playlistFromApi.picture_medium,\r\n    bitPicture: playlistFromApi.picture_big,\r\n    xlPicture: playlistFromApi.picture_xl,\r\n  };\r\n};\r\n","import { changePlaylistsTracks, selectPlaylists, selectPlaylistsTracks } from \"./../slices/contentSlice\";\r\nimport { logWarning } from \"./../helpers/dev\";\r\nimport { Playlists, PlaylistsTracks } from \"./../commonTypes/miscTypes.d\";\r\nimport { changeUserPlaylistsIds, selectLikedTracks, selectLikedTracksIds } from \"./../slices/userSlice\";\r\nimport { addTrackToLikedApiCall, getPlaylistTracks, removeTrackFromLikedApiCall } from \"./../helpers/deezerApiHelper\";\r\nimport { parsePlaylist } from \"./../helpers/deezerDataHelper\";\r\nimport { PlaylistModel, TrackModel } from \"./../commonTypes/deezerTypes.d\";\r\nimport { parseTrack } from \"../helpers/deezerDataHelper\";\r\nimport { put, select, takeLatest } from \"redux-saga/effects\";\r\nimport { getUserPlaylists } from \"../helpers/deezerApiHelper\";\r\nimport { changeLikedTracks, changeLikedTracksIds } from \"../slices/userSlice\";\r\nimport { AsyncContentState } from \"../commonDefinitions/miscCommonDefinitions\";\r\nimport { changePlaylists } from \"../slices/contentSlice\";\r\n\r\nconst LOAD_BASIC_USER_INFO = \"user/load/basicInfo\";\r\nconst LOAD_USER_PLAYLISTS = \"user/load/playlists\";\r\nconst ADD_TRACK_TO_LIKED = \"user/add/trackToLiked\";\r\nconst REMOVE_TRACK_FROM_LIKED = \"user/remove/trackFromLiked\";\r\n\r\nexport interface AddTrackToLikedPayload {\r\n  track: TrackModel;\r\n}\r\n\r\nexport interface RemoveTrackFromLikedPayload {\r\n  track: TrackModel;\r\n}\r\n\r\nexport interface LoadPlaylistTracksPayload {\r\n  playlistId: string;\r\n}\r\n\r\nexport interface LoadUserPlaylists {\r\n  type: typeof LOAD_USER_PLAYLISTS;\r\n}\r\n\r\nexport interface AddTrackToLiked {\r\n  type: typeof ADD_TRACK_TO_LIKED;\r\n  payload: AddTrackToLikedPayload;\r\n}\r\n\r\nexport interface RemoveTrackFromLiked {\r\n  type: typeof REMOVE_TRACK_FROM_LIKED;\r\n  payload: RemoveTrackFromLikedPayload;\r\n}\r\n\r\nexport const loadBasicUserInfo = () => ({\r\n  type: LOAD_BASIC_USER_INFO,\r\n});\r\n\r\nexport const loadUserPlaylists = (): LoadUserPlaylists => ({\r\n  type: LOAD_USER_PLAYLISTS,\r\n});\r\n\r\nexport const addTrackToLikedAction = (payload: AddTrackToLikedPayload): AddTrackToLiked => ({\r\n  type: ADD_TRACK_TO_LIKED,\r\n  payload,\r\n});\r\n\r\nexport const removeTrackFromLikedAction = (payload: RemoveTrackFromLikedPayload): RemoveTrackFromLiked => ({\r\n  type: REMOVE_TRACK_FROM_LIKED,\r\n  payload,\r\n});\r\n\r\nfunction* loadBasicUserInfoWatcher(): any {\r\n  yield put(loadUserPlaylists());\r\n}\r\n\r\nfunction* loadUserPlaylistsWatcher(): any {\r\n  let response: any[] = yield getUserPlaylists();\r\n  console.log(response);\r\n  const receivedPlaylists: PlaylistModel[] = [];\r\n\r\n  for (const playlistJson of response) {\r\n    const parsedPlaylist = parsePlaylist(playlistJson);\r\n\r\n    if (parsedPlaylist.isLikedTracks) {\r\n      const likedTracksJson: any[] = yield getPlaylistTracks(parsedPlaylist.id);\r\n      const likedTracks: TrackModel[] = likedTracksJson.map((e) => parseTrack(e));\r\n      const reversedTracks = likedTracks.reverse();\r\n\r\n      yield put(changeLikedTracks(likedTracks));\r\n      yield put(changeLikedTracksIds(reversedTracks.map((e) => e.id)));\r\n    } else {\r\n      receivedPlaylists.push(parsedPlaylist);\r\n    }\r\n  }\r\n  const allPlaylists = yield select(selectPlaylists);\r\n\r\n  const playlistsObject: Playlists = {};\r\n\r\n  receivedPlaylists.forEach((item) => {\r\n    playlistsObject[item.id] = item;\r\n  });\r\n\r\n  yield put(changePlaylists({ ...allPlaylists, ...playlistsObject }));\r\n  yield put(changeUserPlaylistsIds(receivedPlaylists.map((p) => p.id)));\r\n}\r\n\r\nfunction* addTrackToLikedWatcher({ payload }: AddTrackToLiked) {\r\n  const { track } = payload;\r\n  const likedTracks: TrackModel[] = yield select(selectLikedTracks);\r\n  const likedTracksIds: string[] = yield select(selectLikedTracksIds);\r\n\r\n  yield put(changeLikedTracks([track, ...likedTracks]));\r\n  yield put(changeLikedTracksIds([track.id, ...likedTracksIds]));\r\n\r\n  yield addTrackToLikedApiCall(track.id);\r\n}\r\n\r\nfunction* removeTrackFromLikedWatcher({ payload }: RemoveTrackFromLiked) {\r\n  const { track } = payload;\r\n  const likedTracks: TrackModel[] = yield select(selectLikedTracks);\r\n  const likedTracksIds: string[] = yield select(selectLikedTracksIds);\r\n\r\n  const trackIndex = likedTracks.indexOf(track);\r\n  const trackIdIndex = likedTracksIds.indexOf(track.id);\r\n\r\n  if (trackIndex === -1 && trackIdIndex === -1) {\r\n    console.log(\"ERROR: The track is not liked\");\r\n    return;\r\n  }\r\n\r\n  if ((trackIndex === -1 && trackIdIndex !== -1) || (trackIdIndex === -1 && trackIndex !== -1)) {\r\n    throw new Error(\"track ids sync error\");\r\n  }\r\n\r\n  const newLiked = Array.from(likedTracks);\r\n  const newLikedIds = Array.from(likedTracksIds);\r\n\r\n  newLiked.splice(trackIndex, 1);\r\n  newLikedIds.splice(trackIdIndex, 1);\r\n\r\n  yield put(changeLikedTracks([...newLiked]));\r\n  yield put(changeLikedTracksIds([...newLikedIds]));\r\n\r\n  yield removeTrackFromLikedApiCall(track.id);\r\n}\r\n\r\nexport default function* userSaga() {\r\n  yield takeLatest(LOAD_BASIC_USER_INFO, loadBasicUserInfoWatcher);\r\n  yield takeLatest(LOAD_USER_PLAYLISTS, loadUserPlaylistsWatcher);\r\n  yield takeLatest(ADD_TRACK_TO_LIKED, addTrackToLikedWatcher);\r\n  yield takeLatest(REMOVE_TRACK_FROM_LIKED, removeTrackFromLikedWatcher);\r\n}\r\n","import classNames from \"classnames\";\r\nimport React from \"react\";\r\nimport { useAppDispatch } from \"../../app/hooks\";\r\nimport { TrackModel } from \"../../commonTypes/deezerTypes\";\r\nimport { generateMp3Url } from \"../../sagas/mp3Saga\";\r\nimport { addTrackToLikedAction, removeTrackFromLikedAction } from \"../../sagas/userSaga\";\r\nimport Icon from \"../Icon/Icon\";\r\nimport { IconType } from \"../Icon/iconCommonDefinition\";\r\nimport style from \"./track.module.sass\";\r\n\r\nexport interface TrackProps {\r\n  model: TrackModel;\r\n  liked: boolean;\r\n  className?: string;\r\n  onClick?: () => void;\r\n}\r\n\r\nconst Track: React.FC<TrackProps> = ({ model, liked, className, onClick }) => {\r\n  const dispatch = useAppDispatch();\r\n  const finalClassName = classNames([style.track, className]);\r\n\r\n  const handleLikeClick = () => {\r\n    if (liked) {\r\n      dispatch(removeTrackFromLikedAction({ track: model }));\r\n    } else {\r\n      dispatch(addTrackToLikedAction({ track: model }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={finalClassName} onClick={onClick}>\r\n      <img alt=\"cover\" src={model.album.cover} className={style.track__cover} />\r\n      <div className={style.track__main_info}>\r\n        <span className={style.track__title}>{model.title}</span>\r\n        <span className={style.track__artist}>{model.artist.name}</span>\r\n      </div>\r\n      <Icon name=\"heart\" type={liked ? IconType.Solid : IconType.Light} className={style.track__like} onClick={handleLikeClick} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Track;\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport { TrackModel } from \"../../commonTypes/deezerTypes\";\r\nimport Track from \"../Track/Track\";\r\nimport style from \"./tracklist.module.sass\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/hooks\";\r\nimport { changePlayerTrack } from \"../../slices/playerSlice\";\r\nimport { selectLikedTracks, selectLikedTracksIds } from \"../../slices/userSlice\";\r\n\r\nexport interface TracklistProps {\r\n  tracks: TrackModel[];\r\n  className?: string;\r\n}\r\n\r\nconst Tracklist: React.FC<TracklistProps> = ({ tracks, className }) => {\r\n  const dispatch = useAppDispatch();\r\n  const finalClassName = classNames([style.tracklist, className]);\r\n  const likedTracksIds = useAppSelector(selectLikedTracksIds);\r\n\r\n  const handleTrackClick = (track: TrackModel) => {\r\n    dispatch(changePlayerTrack(track));\r\n  };\r\n\r\n  return (\r\n    <div className={finalClassName}>\r\n      <div className={style.tracklist__inner}>\r\n        {tracks.map((e) => (\r\n          <Track key={e.id} liked={likedTracksIds.includes(e.id)} model={e} onClick={() => handleTrackClick(e)} className={style.tracklist__track} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tracklist;\r\n","import React from \"react\";\r\nimport { useAppSelector } from \"../../app/hooks\";\r\nimport ScreenContainer from \"../../components/ScreenContainer/ScreenContainer\";\r\nimport Track from \"../../components/Track/Track\";\r\nimport Tracklist from \"../../components/Tracklist/Tracklist\";\r\nimport { selectLikedTracks } from \"../../slices/userSlice\";\r\nimport style from \"./likedScreen.module.sass\";\r\n\r\nconst LikedScreen = () => {\r\n  const likedTracks = useAppSelector(selectLikedTracks);\r\n\r\n  return (\r\n    <ScreenContainer>\r\n      <div className={style.liked_screen}>\r\n        <Tracklist tracks={likedTracks} />\r\n      </div>\r\n    </ScreenContainer>\r\n  );\r\n};\r\n\r\nexport default LikedScreen;\r\n","import { TrackModel } from \"../commonTypes/deezerTypes\";\r\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../app/store\";\r\n\r\nexport interface SearchState {\r\n  result: TrackModel[];\r\n}\r\n\r\nconst initialState: SearchState = {\r\n  result: [],\r\n};\r\n\r\nexport const searchSlice = createSlice({\r\n  name: \"search\",\r\n  initialState,\r\n  reducers: {\r\n    changeSearchResult: (state, action: PayloadAction<TrackModel[]>) => {\r\n      state.result = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { changeSearchResult } = searchSlice.actions;\r\n\r\nexport const selectSearchResult = (state: RootState) => state.search.result;\r\n\r\nexport default searchSlice.reducer;\r\n","import { parseTrack } from \"../helpers/deezerDataHelper\";\r\nimport { put, takeLatest } from \"redux-saga/effects\";\r\nimport { searchTrackApiCall } from \"../helpers/deezerApiHelper\";\r\nimport { changeSearchResult } from \"../slices/searchSlice\";\r\nimport { isLiked } from \"../utils/trackUtils\";\r\n\r\nexport const SEARCH_TRACK = \"search/track\";\r\n\r\nexport interface SearchTrackPayload {\r\n  query: string;\r\n}\r\n\r\nexport interface SearchTrack {\r\n  type: typeof SEARCH_TRACK;\r\n  payload: SearchTrackPayload;\r\n}\r\n\r\nexport const searchTrack = (payload: SearchTrackPayload): SearchTrack => ({\r\n  type: SEARCH_TRACK,\r\n  payload,\r\n});\r\n\r\nexport function* searchTrackWatcher({ payload }: SearchTrack): any {\r\n  const { query } = payload;\r\n\r\n  const response = yield searchTrackApiCall(query);\r\n\r\n  yield put(changeSearchResult(response.map((e: any) => parseTrack(e))));\r\n}\r\n\r\nexport default function* searchSaga() {\r\n  yield takeLatest(SEARCH_TRACK, searchTrackWatcher);\r\n}\r\n","import React, { KeyboardEventHandler, useState } from \"react\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/hooks\";\r\nimport Icon from \"../../components/Icon/Icon\";\r\nimport ScreenContainer from \"../../components/ScreenContainer/ScreenContainer\";\r\nimport Tracklist from \"../../components/Tracklist/Tracklist\";\r\nimport { searchTrack } from \"../../sagas/searchSaga\";\r\nimport { selectSearchResult } from \"../../slices/searchSlice\";\r\nimport style from \"./searchScreen.module.sass\";\r\n\r\nconst SearchScreen: React.FC = () => {\r\n  const searchResult = useAppSelector(selectSearchResult);\r\n\r\n  return (\r\n    <ScreenContainer>\r\n      <div className={style.search_screen}>\r\n        <SearchScreenInput />\r\n        <Tracklist tracks={searchResult} className={style.search_screen__tracklist} />\r\n      </div>\r\n    </ScreenContainer>\r\n  );\r\n};\r\n\r\nconst SearchScreenInput = () => {\r\n  const dispatch = useAppDispatch();\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const handleSearch = () => {\r\n    dispatch(searchTrack({ query: value }));\r\n  };\r\n\r\n  const handleKeyDown = (event: React.KeyboardEvent) => {\r\n    if (event.key === \"Enter\") {\r\n      handleSearch();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={style.search_screen_input} onKeyDown={handleKeyDown}>\r\n      <input value={value} onChange={(e) => setValue(e.target.value)} placeholder=\"Search\"></input>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchScreen;\r\n","import classNames from \"classnames\";\r\nimport React from \"react\";\r\nimport style from \"./button.module.sass\";\r\n\r\nexport interface ButtonProps {\r\n  title: string;\r\n  className?: string;\r\n  onCLick: (e: React.MouseEvent<HTMLElement>) => void;\r\n}\r\n\r\nconst Button: React.FC<ButtonProps> = ({ title, className, onCLick }) => {\r\n  const finalStyle = classNames([style.button, className]);\r\n\r\n  return (\r\n    <button className={finalStyle} onClick={onCLick}>\r\n      {title}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import { takeLatest } from \"redux-saga/effects\";\r\nimport { object2queryParams } from \"../utils/urlUtils\";\r\n\r\nconst DEEZER_APP_ID = \"535202\";\r\nconst DEEZER_OAUTH_REDIR = \"http://localhost:3000/cb\";\r\nconst DEEZER_OAUTH_URL = \"https://connect.deezer.com/oauth/auth.php\";\r\nconst DEEZER_OAUTH_PERMS = \"basic_access,email,manage_community,manage_library,delete_library,offline_access\";\r\n\r\nconst SIGN_IN_BY_REDIRECT = \"deezer/signInBy/redirect\";\r\n\r\nexport const signInByRedirectAction = () => ({\r\n  type: SIGN_IN_BY_REDIRECT,\r\n});\r\n\r\nfunction* signInByRedirectWatcher() {\r\n  const authUrlParams = object2queryParams({\r\n    app_id: DEEZER_APP_ID,\r\n    redirect_uri: DEEZER_OAUTH_REDIR,\r\n    perms: DEEZER_OAUTH_PERMS,\r\n    format: \"popup\",\r\n    response_type: \"token\",\r\n  });\r\n\r\n  window.open(DEEZER_OAUTH_URL + authUrlParams, \"_self\");\r\n}\r\n\r\nexport default function* deezerSaga() {\r\n  yield takeLatest(SIGN_IN_BY_REDIRECT, signInByRedirectWatcher);\r\n}\r\n","import React from \"react\";\r\nimport { useAppDispatch } from \"../../app/hooks\";\r\nimport Button from \"../../components/Button/Button\";\r\nimport { signInByRedirectAction } from \"../../sagas/deezerSaga\";\r\nimport mobileStyles from \"./welcomeScreenMobile.module.sass\";\r\n\r\nexport const WelcomeScreen = () => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  return (\r\n    <div className={mobileStyles.welcome_screen}>\r\n      <Button title=\"Sign in by Deezer\" className={mobileStyles.welcome_screen_sign_in_button} onCLick={() => dispatch(signInByRedirectAction())} />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useAppDispatch } from \"../../app/hooks\";\r\nimport { PlaylistModel } from \"../../commonTypes/deezerTypes\";\r\nimport styles from \"./playlistPreview.module.sass\";\r\n\r\nexport interface PlaylistPreviewProps {\r\n  playlistModel: PlaylistModel;\r\n}\r\n\r\nexport const PlaylistPreview = ({ playlistModel }: PlaylistPreviewProps) => {\r\n  const history = useHistory();\r\n\r\n  const handleClick = () => {\r\n    history.push(`/playlist/${playlistModel.id}`);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.playlist_preview} onClick={handleClick}>\r\n      <img className={styles.playlist_preview__cover} src={playlistModel.xlPicture} alt=\"\" />\r\n      <div className={styles.playlist_preview__right_side}>\r\n        <span className={styles.playlist_preview__title}>{playlistModel.title}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useAppSelector } from \"../../app/hooks\";\r\nimport { PlaylistModel } from \"../../commonTypes/deezerTypes\";\r\nimport { Playlists } from \"../../commonTypes/miscTypes\";\r\nimport { PlaylistPreview } from \"../../components/PlaylistPreview/PlaylistPreview\";\r\nimport ScreenContainer from \"../../components/ScreenContainer/ScreenContainer\";\r\nimport { selectPlaylists } from \"../../slices/contentSlice\";\r\nimport { selectUserPlaylistsIds } from \"../../slices/userSlice\";\r\nimport styles from \"./collectionScreen.module.sass\";\r\n\r\nexport const CollectionScreen = () => {\r\n  const playlists: Playlists = useAppSelector(selectPlaylists);\r\n  const userPlaylistsIds: string[] = useAppSelector(selectUserPlaylistsIds);\r\n\r\n  const userPlaylists: PlaylistModel[] = Object.values(playlists).filter((i) => userPlaylistsIds.includes(i.id));\r\n\r\n  return (\r\n    <ScreenContainer>\r\n      <div className={styles.collection_screen}>\r\n        {userPlaylists.map((e) => (\r\n          <PlaylistPreview playlistModel={e} />\r\n        ))}\r\n      </div>\r\n    </ScreenContainer>\r\n  );\r\n};\r\n","import { TrackModel } from \"./../commonTypes/deezerTypes.d\";\r\nimport { getPlaylistTracks, loadRecommendedTracksApiCall } from \"./../helpers/deezerApiHelper\";\r\nimport { PlaylistsTracks } from \"./../commonTypes/miscTypes.d\";\r\nimport { parseTrack } from \"../helpers/deezerDataHelper\";\r\nimport { put, select, takeLatest } from \"redux-saga/effects\";\r\nimport { searchTrackApiCall } from \"../helpers/deezerApiHelper\";\r\nimport { changeSearchResult } from \"../slices/searchSlice\";\r\nimport { isLiked } from \"../utils/trackUtils\";\r\nimport { changePlaylistsTracks, changeRecommendedTracks, selectPlaylistsTracks } from \"../slices/contentSlice\";\r\n\r\nexport const LOAD_PLAYLIST_TRACKS = \"content/load/playlistTracks\";\r\nexport const LOAD_RECOMMENDED_TRACKS = \"content/load/recommendedTracks\";\r\n\r\nexport interface LoadPlaylistTracksPayload {\r\n  playlistId: string;\r\n}\r\n\r\nexport interface LoadPlaylistTracks {\r\n  type: typeof LOAD_PLAYLIST_TRACKS;\r\n  payload: LoadPlaylistTracksPayload;\r\n}\r\n\r\nexport const loadPlaylistTracksAction = (payload: LoadPlaylistTracksPayload): LoadPlaylistTracks => ({\r\n  type: LOAD_PLAYLIST_TRACKS,\r\n  payload,\r\n});\r\n\r\nexport const loadRecommendedTracksAction = () => ({\r\n  type: LOAD_RECOMMENDED_TRACKS,\r\n});\r\n\r\nfunction* loadPlaylistTracksWatcher({ payload }: LoadPlaylistTracks): any {\r\n  const { playlistId } = payload;\r\n  const playlistsTracks: PlaylistsTracks = yield select(selectPlaylistsTracks);\r\n\r\n  const tracks: any = yield getPlaylistTracks(playlistId);\r\n  const parsedTracks: TrackModel[] = tracks.map((e: any) => parseTrack(e));\r\n\r\n  yield put(changePlaylistsTracks({ ...playlistsTracks, [playlistId]: parsedTracks }));\r\n}\r\n\r\nfunction* loadRecommendedTracksWatcher(): any {\r\n  const tracks: any[] = yield loadRecommendedTracksApiCall();\r\n  const parsedTracks: TrackModel[] = tracks.map((t) => parseTrack(t));\r\n  yield put(changeRecommendedTracks(parsedTracks));\r\n}\r\n\r\nexport default function* contentSaga() {\r\n  yield takeLatest(LOAD_PLAYLIST_TRACKS, loadPlaylistTracksWatcher);\r\n  yield takeLatest(LOAD_RECOMMENDED_TRACKS, loadRecommendedTracksWatcher);\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { useLocation, useParams } from \"react-router-dom\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/hooks\";\r\nimport ScreenContainer from \"../../components/ScreenContainer/ScreenContainer\";\r\nimport Tracklist from \"../../components/Tracklist/Tracklist\";\r\nimport { loadPlaylistTracksAction } from \"../../sagas/contentSaga\";\r\nimport { selectPlaylists, selectPlaylistsTracks } from \"../../slices/contentSlice\";\r\nimport styles from \"./PlaylistScreen.module.scss\";\r\n\r\nexport const PlaylistScreen = () => {\r\n  const { id } = useParams<any>();\r\n  const dispatch = useAppDispatch();\r\n  const playlists = useAppSelector(selectPlaylists);\r\n  const playlistsTracks = useAppSelector(selectPlaylistsTracks);\r\n\r\n  useEffect(() => {\r\n    dispatch(loadPlaylistTracksAction({ playlistId: id }));\r\n  }, [id]);\r\n\r\n  const targetTracks = playlistsTracks[id];\r\n\r\n  if (!targetTracks?.length) {\r\n    return <span>Playlist is empty or not loaded yet</span>;\r\n  }\r\n\r\n  return (\r\n    <ScreenContainer>\r\n      <div className={styles.playlist_screen}>\r\n        <Tracklist tracks={targetTracks} />\r\n      </div>\r\n    </ScreenContainer>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/hooks\";\r\nimport ScreenContainer from \"../../components/ScreenContainer/ScreenContainer\";\r\nimport Tracklist from \"../../components/Tracklist/Tracklist\";\r\nimport { loadRecommendedTracksAction } from \"../../sagas/contentSaga\";\r\nimport { selectRecommendedTracks } from \"../../slices/contentSlice\";\r\nimport styles from \"./RecommendedScreen.module.scss\";\r\n\r\nexport const RecommendedScreen = () => {\r\n  const dispatch = useAppDispatch();\r\n  const tracks = useAppSelector(selectRecommendedTracks);\r\n\r\n  useEffect(() => {\r\n    dispatch(loadRecommendedTracksAction());\r\n  }, []);\r\n\r\n  if (!tracks?.length) {\r\n    return <span>Recommended tracks not loaded yey</span>;\r\n  }\r\n\r\n  return (\r\n    <ScreenContainer>\r\n      <div className={styles.recommended_screen}>\r\n        <Tracklist tracks={tracks} />\r\n      </div>\r\n    </ScreenContainer>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { useAppDispatch } from \"../../app/hooks\";\r\nimport { changeDeezerToken } from \"../../slices/deezerSlice\";\r\n\r\nexport const CallbackScreen = () => {\r\n  const history = useHistory();\r\n  const dispatch = useAppDispatch();\r\n\r\n  useEffect(() => {\r\n    const paramsString = \"?\" + window.location.hash.slice(1);\r\n    const params = new URLSearchParams(paramsString);\r\n    const token = params.get(\"token|access_token\");\r\n\r\n    dispatch(changeDeezerToken(token || \"\"));\r\n    history.push(\"/\");\r\n  }, []);\r\n\r\n  return <></>;\r\n};\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport \"./App.sass\";\r\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\r\nimport LikedScreen from \"./screens/likedScreen/LikedScreen\";\r\nimport { useAppDispatch, useAppSelector } from \"./app/hooks\";\r\nimport { changeIsMobileEnv, selectIsMobileEnv } from \"./slices/appSlice\";\r\nimport { selectDeezerToken } from \"./slices/deezerSlice\";\r\nimport SearchScreen from \"./screens/searchScreen/SearchScreen\";\r\nimport { loadBasicUserInfo } from \"./sagas/userSaga\";\r\nimport { WelcomeScreen } from \"./screens/WelcomeScreen/WelcomeScreen\";\r\nimport { CollectionScreen } from \"./screens/collectionScreen/CollectionScreen\";\r\nimport { PlaylistScreen } from \"./screens/playlistScreen/PlaylistScreen\";\r\nimport { RecommendedScreen } from \"./screens/recommendedScreen/RecommendedScreen\";\r\nimport { deezerApiRequest } from \"./helpers/deezerApiHelper\";\r\nimport { CallbackScreen } from \"./screens/callbackScreen/CallbackScreen\";\r\n\r\nfunction App() {\r\n  const dispatch = useAppDispatch();\r\n  const isMobile = useAppSelector(selectIsMobileEnv);\r\n  const deezerToken = useAppSelector(selectDeezerToken);\r\n\r\n  const handleWindowResize = useCallback(() => {\r\n    const windowWidth = window.innerWidth;\r\n\r\n    if (+(windowWidth <= 1024) ^ +isMobile) {\r\n      dispatch(changeIsMobileEnv(!isMobile));\r\n    }\r\n  }, [isMobile, dispatch]);\r\n\r\n  //update isMobile value on resize\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", handleWindowResize);\r\n    return () => window.removeEventListener(\"resize\", handleWindowResize);\r\n  }, [handleWindowResize]);\r\n\r\n  //isMobile init value\r\n  useEffect(() => {\r\n    dispatch(changeIsMobileEnv(window.innerWidth <= 1024));\r\n  }, []);\r\n\r\n  //load user info\r\n  useEffect(() => {\r\n    //@ts-ignore\r\n    if (deezerToken) {\r\n      dispatch(loadBasicUserInfo());\r\n    }\r\n  }, [deezerToken]);\r\n\r\n  if (!deezerToken) {\r\n    return (\r\n      <div className=\"App\">\r\n        <BrowserRouter>\r\n          <Switch>\r\n            <Route exact path=\"/cb\">\r\n              <CallbackScreen />\r\n            </Route>\r\n            <Route path=\"*\">\r\n              <WelcomeScreen />\r\n            </Route>\r\n          </Switch>\r\n        </BrowserRouter>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route exact path=\"/\" render={() => <Redirect to=\"/liked\" />} />\r\n          <Route exact path=\"/liked\">\r\n            <LikedScreen />\r\n          </Route>\r\n          <Route exact path=\"/search\">\r\n            <SearchScreen />\r\n          </Route>\r\n          <Route exact path=\"/collection\">\r\n            <CollectionScreen />\r\n          </Route>\r\n          <Route exact path=\"/recommended\">\r\n            <RecommendedScreen />\r\n          </Route>\r\n          <Route exact path=\"/playlist/:id\">\r\n            <PlaylistScreen />\r\n          </Route>\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const DEEZER_TOKEN_STORAGE_KEY = \"dz\";\r\nconst DEEZER_APP_ID = process.env.REACT_APP_DZ_APP_ID;\r\nconst MP3_SERVER_URL = process.env.REACT_APP_MP3_SERVER_URL;\r\n\r\nconst config = {\r\n  DEEZER_TOKEN_STORAGE_KEY,\r\n  DEEZER_APP_ID,\r\n  MP3_SERVER_URL,\r\n};\r\n\r\nexport default config;\r\n","import { Mp3Url, Mp3UrlCollection } from \"./../commonTypes/miscTypes.d\";\r\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../app/store\";\r\n\r\nexport interface Mp3State {\r\n  urls: Mp3UrlCollection;\r\n}\r\n\r\nconst initialState: Mp3State = {\r\n  urls: {},\r\n};\r\n\r\nexport const mp3Slice = createSlice({\r\n  name: \"mp3\",\r\n  initialState,\r\n  reducers: {\r\n    changeMp3Urls: (state, action: PayloadAction<Mp3UrlCollection>) => {\r\n      state.urls = action.payload;\r\n    },\r\n    setMp3Url: (\r\n      state,\r\n      action: PayloadAction<{ id: string; mp3Url: Mp3Url }>\r\n    ) => {\r\n      state.urls = {\r\n        ...state.urls,\r\n        [action.payload.id]: action.payload.mp3Url,\r\n      };\r\n    },\r\n  },\r\n});\r\n\r\nexport const { changeMp3Urls, setMp3Url } = mp3Slice.actions;\r\n\r\nexport const selectMp3Urls = (state: RootState) => state.mp3.urls;\r\n\r\nexport default mp3Slice.reducer;\r\n","import { Mp3Url } from \"./../commonTypes/miscTypes.d\";\r\nimport { put, takeLatest } from \"redux-saga/effects\";\r\nimport config from \"../config/config\";\r\nimport { object2queryParams } from \"../utils/urlUtils\";\r\nimport { setMp3Url } from \"../slices/mp3Slice\";\r\n\r\nexport const GENERATE_MP3_URL = \"mp3/generate/url\";\r\n\r\nexport interface GenerateMp3UrlPayload {\r\n  title: string;\r\n  artist: string;\r\n  trackId: string;\r\n}\r\n\r\nexport interface GenerateMp3Url {\r\n  type: typeof GENERATE_MP3_URL;\r\n  payload: GenerateMp3UrlPayload;\r\n}\r\n\r\nexport const generateMp3Url = (\r\n  payload: GenerateMp3UrlPayload\r\n): GenerateMp3Url => ({\r\n  type: GENERATE_MP3_URL,\r\n  payload,\r\n});\r\n\r\nexport function* generateMp3UrlWatcher({ payload }: GenerateMp3Url): any {\r\n  const { title, artist, trackId } = payload;\r\n\r\n  const queryParams = object2queryParams({ title, artist, deezerId: trackId });\r\n  console.log(config.MP3_SERVER_URL + \"/url/mp3\" + queryParams);\r\n  const response = yield fetch(\r\n    config.MP3_SERVER_URL + \"/url/mp3\" + queryParams\r\n  );\r\n  const data = yield response.json();\r\n  const mp3Url: Mp3Url = {\r\n    ulr: data,\r\n    expires: response.headers.get(\"Expires\"),\r\n    canExpire: true,\r\n  };\r\n\r\n  yield put(setMp3Url({ id: trackId, mp3Url }));\r\n}\r\n\r\nexport default function* mp3Saga() {\r\n  yield takeLatest(GENERATE_MP3_URL, generateMp3UrlWatcher);\r\n}\r\n","import { all, fork } from \"redux-saga/effects\";\r\nimport searchSaga from \"./searchSaga\";\r\nimport deezerSaga from \"./deezerSaga\";\r\nimport userSaga from \"./userSaga\";\r\nimport mp3Saga from \"./mp3Saga\";\r\nimport contentSaga from \"./contentSaga\";\r\n\r\nexport default function* rootSaga() {\r\n  yield all([fork(searchSaga), fork(deezerSaga), fork(userSaga), fork(mp3Saga), fork(contentSaga)]);\r\n}\r\n","import deezerSlice from \"./../slices/deezerSlice\";\r\nimport { configureStore, createStore, applyMiddleware, ThunkAction, Action, combineReducers, compose } from \"@reduxjs/toolkit\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport appSlice from \"../slices/appSlice\";\r\nimport searchSlice from \"../slices/searchSlice\";\r\nimport rootSaga from \"../sagas/rootSaga\";\r\nimport userSlice from \"../slices/userSlice\";\r\nimport mp3Slice from \"./../slices/mp3Slice\";\r\nimport playerSlice from \"./../slices/playerSlice\";\r\nimport contentSlice from \"./../slices/contentSlice\";\r\nimport { composeWithDevTools } from \"@reduxjs/toolkit/dist/devtoolsExtension\";\r\n\r\nconst persistConfig = {\r\n  key: \"persist-root\",\r\n  storage,\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  app: appSlice,\r\n  deezer: deezerSlice,\r\n  search: searchSlice,\r\n  user: userSlice,\r\n  mp3: mp3Slice,\r\n  player: playerSlice,\r\n  content: contentSlice,\r\n});\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n//@ts-ignore\r\nconst middlewareEnhancer = compose(applyMiddleware(sagaMiddleware), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\nexport const store = createStore(persistedReducer, undefined, middlewareEnhancer);\r\nexport const persistor = persistStore(store);\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { persistor, store } from \"./app/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}